/*
 * This file is part of www.nand2tetris.org
 * and the book "The Elements of Computing Systems"
 * by Nisan and Schocken, MIT Press.
 * File name: projects/03/a/RAM64.hdl
 */

/*
 * Memory of 64 registers, each 16 bit-wide. Out holds the value
 * stored at the memory location specified by address. If load==1, then 
 * the in value is loaded into the memory location specified by address 
 * (the loaded value will be emitted to out from the next time step onward).
 */

CHIP RAM64 {
    IN in[16], load, address[6];
    OUT out[16];

    PARTS:
    
    DMux8Way(in=load,sel=address[3..5],
    a=r000,b=r001,c=r010,d=r011,
    e=r100,f=r101,g=r110,h=r111);

    RAM8(in=in,load=r111,address=address[0..2],out=R111);
    RAM8(in=in,load=r110,address=address[0..2],out=R110);
    RAM8(in=in,load=r101,address=address[0..2],out=R101);
    RAM8(in=in,load=r100,address=address[0..2],out=R100);
    RAM8(in=in,load=r011,address=address[0..2],out=R011);
    RAM8(in=in,load=r010,address=address[0..2],out=R010);
    RAM8(in=in,load=r001,address=address[0..2],out=R001);
    RAM8(in=in,load=r000,address=address[0..2],out=R000);

    Mux8Way16(out=out,sel=address[3..5],
    a=R000,b=R001,c=R010,d=R011,
    e=R100,f=R101,g=R110,h=R111);
}
